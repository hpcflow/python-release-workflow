name: test
concurrency:
  | # e.g. don't run simultaneously on the same branch (since we may commit to that branch)
  {% raw %}ci-${{ format('{0}github.head_ref', 'refs/heads') || github.ref }}{% endraw %}

env:
  PYTHON_VERSION_PRE_COMMIT: "3.11"

on:
  workflow_dispatch: # manual invocation
  pull_request:
    types: [opened, edited, synchronize]
    branches: [main, develop] # have to manually change these

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # PAT of user who has permission to bypass branch
          # protection || or standard GITHUB_TOKEN if running on an external fork (won't
          # be able to commit fixes):
          token: {{ '${{' }} secrets.{{ token_name }} {{ '|| secrets.GITHUB_TOKEN }}' }}
          # checkout PR source branch (head_ref) if event is pull_request:
          ref: {% raw %}${{ github.head_ref || github.ref }}{% endraw %}
          repository: {% raw %}${{ github.event.pull_request.head.repo.full_name }}{% endraw %}

      - run: |
          git config user.name {{ bot_account_name }}
          git config user.email {{ bot_account_email }}

      - uses: actions/setup-python@v4
        with:
          python-version: {% raw %}${{ env.PYTHON_VERSION_PRE_COMMIT }}{% endraw %}

      - name: pre-commit
        # avoid exit code 1 (which halts GH actions) from pre-commit run command by
        # running twice:
        run: |
          pip install pre-commit
          pre-commit install
          export SKIP=no-commit-to-branch
          pre-commit run --all-files || pre-commit run --all-files

      - name: pre-commit push changes
        run: |
          if git diff --quiet; then
            echo "No pre-commit changes"
          else
            git commit -am "pre-commit fixes [skip ci]"
            git push
          fi

  test:
    needs: pre-commit
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest

    runs-on: {% raw %}${{ matrix.os }}{% endraw %}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: {% raw %}${{ github.ref }}{% endraw %}

      - uses: actions/setup-python@v4
        with:
          python-version: {% raw %}${{ matrix.python-version }}{% endraw %}

      - name: Install and configure poetry
        run: |
          python -m pip install poetry==1.4
          poetry config virtualenvs.in-project true
          poetry config installer.modern-installation false

      - name: Cache the virtualenv
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: {% raw %}${{ runner.os }}-test-${{ matrix.python-version }}-venv-${{ hashFiles('**/poetry.lock') }}{% endraw %}

      - name: Install dependencies
        run: |
          poetry install --without dev,pyinstaller

      - name: Run tests
        run: |
          poetry run python -m pytest {{ pytest_args }}

  test-CentOS:
    needs: pre-commit
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/hpcflow/centos7-poetry:latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: {% raw %}${{ github.ref }}{% endraw %}

      - name: Set ownership
        run: |
          # see: https://github.com/actions/runner/issues/2033#issuecomment-1204205989
          # this is to fix GIT not liking owner of the checkout dir
          chown -R $(id -u):$(id -g) $PWD

      - name: Configure poetry
        run: |
          poetry config virtualenvs.in-project true
          poetry config installer.modern-installation false

      - name: Cache the virtualenv
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: {% raw %}venv-CentOS-test-${{ hashFiles('**/poetry.lock') }}{% endraw %}

      - name: Install dependencies
        run: poetry install --without dev,pyinstaller

      - name: Run tests
        run: |
          poetry run python -m pytest {{ pytest_args }}
